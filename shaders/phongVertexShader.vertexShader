#version 120

//varying vec3 normal;
//varying vec3 lightRay;
//varying vec3 viewRay;
//uniform int nrLightSources;
//uniform int id;

attribute vec3 position;
attribute vec3 normal_in;

uniform mat4 MVP;

varying vec3 normal;
varying vec3 lightRay;
varying vec3 viewRay;

//layout(location = 0) in vec3 position;

void main() {
//	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
	//normal = normalize(gl_NormalMatrix * normal_in);
	normal = normalize(normal_in);
	lightRay = gl_LightSource[0].position.xyz - vec3(gl_ModelViewMatrix * gl_Vertex);
	viewRay = (- gl_ModelViewMatrix * gl_Vertex).xyz;
//
	gl_FrontColor = gl_Color;
	gl_BackColor = gl_Color;

	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;

	//for (int i = 0; i < nrLightSources; i++) {
	//	lightRay[i] = gl_LightSource[i].position.xyz - vec3(gl_ModelViewMatrix * gl_Vertex);
	//}
}
