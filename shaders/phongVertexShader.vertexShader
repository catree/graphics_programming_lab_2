#version 120

varying vec3 normal;
varying vec3 lightRay;
varying vec3 viewRay;
//uniform int nrLightSources;

uniform vec3 color;
attribute vec3 normal_in;


void main() {

	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
	normal = normalize(gl_NormalMatrix * normal_in);
	lightRay = gl_LightSource[0].position.xyz - vec3(gl_ModelViewMatrix * gl_Vertex);
	viewRay = (- gl_ModelViewMatrix * gl_Vertex).xyz;

	gl_FrontColor =  vec4(color, 1);
	gl_BackColor = vec4(color, 1);

	//for (int i = 0; i < nrLightSources; i++) {
	// lightRay[i] = gl_LightSource[i].position.xyz - vec3(gl_ModelViewMatrix * gl_Vertex);
	//}
}
